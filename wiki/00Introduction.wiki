#labels introduction
#Overview of this project.


=Project Background=
Today high-volume event streams naturally exist in a variety of environments including sensing devices, financial services, network monitors, etc. An increasing number of applications require that useful information be extracted from such event streams in a timely manner. Such translation from event streams to useful, actionable information is realized by a new processing paradigm called complex event processing.

CEP aims to provide a set of core functions:

  * Filtering removes unwanted events
  * Correlation detects complex patterns across different events.
  * Aggregation computes aggregate values.
  * Transformation generates new types of events.
To this end, we are designing and implementing a complex event processor, which we call SASE (Stream-based And Shared Event processing). SASE provides:

  * A rich declarative event language
  * Formal semantics of the event language
  * Theorectical underpinnings of CEP
  * An efficient automata-based implementation

=Technologies=

==Major Components==
In the package of Sase1.0, we include the following items:

  * Command Line User Interface
  * Stream Generator: generates synthetic data for academic experiments
  * NFA Parser: reads in NFA files in a predefined format
  * Query Evaluation Engine: evaluates streams against given queries

==Selection Strategies=
In Sase1.0, we support the following selection strategies:

  * Partition Congituigy
  * Skip Till Next Match

For the details of the selection strategies, please read our [http://sase-umass.googlecode.com/files/sase-sigmod08.pdf SIGMOD2008 paper].