#This page explains how to run the engine .
The SASE1.0 can be run from a command-line.

= Command: running SASE using a command line =
Assuming you unzipped the SASE 1.0 in location _*/SASE_HOME*_.
==1. Test run==
The work directory is _*/SASE_HOME/build*_. Then use the following command to test the engine:
{{{
java -jar sase.jar
}}}
This will use the "test.query" and "test.stream" in the work directory.

==2. Run with configurations==
The engine allows you to designate the query file and the stream file using *sase.jar*
  * If your work directory is _*/SASE_HOME/build*_, the command should be in this format:
{{{ 
java -jar sase.jar  Query_File Stream_File  Print_Result_Flag
}}}

  * If you want to run the engine from other directory, please use the following configuration steps:
  # Set the SASE_HOME environment variable to point to the SASE 1.0 installation directory.
  # Add $SASE_HOME/bin to the PATH to access all the executables.
  # Add $YFILTER_HOME/build/sase.jar to the CLASSPATH.

Then you can use the following command from any directory:
{{{ 
sase  Query_File Stream_File  Print_Result_Flag
}}} 

The meanings of the parameters are explained as follows:

|| Query_File || specifies the location of the query file, which is the full path of the file ||
|| Stream_File || specifies the location of the stream file, which is the full path of the file ||
|| Print_Result_Flag || specifies whether or not to print the details of the result in the console. 1 for print, 0 for not print||

==3. Change the code==
If you make changes to the source code, the Main Class is edu.umass.cs.sase.UI.CommandLineUI.java. 
===Example===


java -jar sase.jar domainsize.query domainsize100.stream 0  


  * [http://code.google.com/p/sase-umass/wiki/04WriteAQuery How to write a query file]
  * [http://code.google.com/p/sase-umass/wiki/03ConfigTheStream How to write a stream file]

=Script=
The script files for some experiments are included in the scripts folder. 
{{{
Before using these scripts,set the SASE_HOME environment variable to point to the SASE1.0 installation directory.
}}}
=Result=
If you choose to print results, you can see the chosen events for each match. The match looks like this:
{{{
----------Here is the No.20 match----------

This match has selected the following events: 

ID = 29535	Timestamp = 29535	Symbol = 1	Price = 16000	Volume = 678
ID = 29536	Timestamp = 29536	Symbol = 1	Price = 16001	Volume = 185
ID = 29538	Timestamp = 29538	Symbol = 1	Price = 16001	Volume = 126

----------Here is the No.21 match----------

This match has selected the following events: 

ID = 33164	Timestamp = 33164	Symbol = 1	Price = 18000	Volume = 863
ID = 33165	Timestamp = 33165	Symbol = 1	Price = 18003	Volume = 464
ID = 33166	Timestamp = 33166	Symbol = 1	Price = 18005	Volume = 612
ID = 33167	Timestamp = 33167	Symbol = 1	Price = 18007	Volume = 543
ID = 33168	Timestamp = 33168	Symbol = 1	Price = 18008	Volume = 515
ID = 33169	Timestamp = 33169	Symbol = 1	Price = 18011	Volume = 709
ID = 33171	Timestamp = 33171	Symbol = 1	Price = 18012	Volume = 73


}}}

Whether or not you choose to print the details of the results, the system will output the profiling numbers like this:
{{{
**************Profiling Numbers*****************
Total Running Time: 571591000 nanoseconds
Number Of Events Processed: 100000
Number Of Runs Created: 203
Number Of Matches Found: 70
Throughput: 174950 events/second

}}}