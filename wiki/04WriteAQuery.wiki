#This page explains how to write a query in a predefined format.

SASE 1.0 supports two formats for representing a query:
  * Query input
  * NFA input
We will explain both formats as follows

=1. Query Input=
The query inputs uses a more friendly style, which is similar to the language we used in our SIGMOD 08 paper. 
==1.1 Keywords==
|| PATTERN || designates the pattern ||
|| SEQ(component, component,...) || specifies the components of the pattern.A normal component is in the format "eventType alias", a Kleene closure component is in the format "eventType+ alias", a negation component is in the format "!eventType alias". The aliases should follow the alphabetical order, e.g, the first component uses 'a', the second component uses 'b', etc. A ',' is used between components.||
|| WHERE || designate the conditions. The first condition is the event selection strategy, which should be one among {"partition-contiguity", "skip-till-next-match", "skip-till-any-match"}. You can designate one partition attribute by using "[attributeName]" as a condition, which means events for a match should have the same value on this attribute. If you want to use a equation as a predicate, please use "==" instead of "=", e.g., "a.symbol == 1". Space is needed before and after the mathematical operators (+, - etc.) and logical operators (==, >, <, >=, <=).  For Kleene closure, some special symbols can be used in square bracket: "1" means the first event for the component, "i" and "i-1" are used to compare two consecutive events for the component, "..i-1" is used to describe all previous events for the component. We support three kinds of aggregation: max, min and avg ||
|| AND || connects two conditions. Each condition uses a single line in format. ||
|| WITHIN || specifies the time window. Here we only allow integers without any units.||

==1.2 Example==
Look at the following example:

{{{
PATTERN SEQ(stock+ a, stock b)
WHERE partition-contiguity
AND [symbol]
AND a[1].price % 500 == 0
AND a[i].price > min(a[..i-1].price)
AND b.volume < 150
WITHIN 500
}}}

In the *PATTERN* line, we use "SEQ(stock+ a, stock b)" to specify there are two components in the pattern. The event type of both components is "stock". The first component is of Kleene closure type, while the second component is a normal component. The aliases for the first and second component are "a" and "b", respectively.

The condition part, Line 2 ~ Line 6, sets 5 conditions, one by each line.
{{{ "WHERE partition-contiguity"}}} sets the event selection strategy as "partition-contiguity". {{{"AND [symbol]"}}} configures the "symbol" as the partition attribute. "AND a[1].price % 500 == 0" is the "begin" condition for the Kleene closure, which constraints the first event for the component. "AND a[i].price > min(a[..i-1].price)" requires each following event should have higher price than the minimum value of previous events for the component. 


=2. NFA Input= 

SASE 1.0 uses a query file to describe a query. A query file consists of two parts: header information and states.

If you want to know more details about the keywords to appear below, please read our [http://sase-umass.googlecode.com/files/sase-sigmod08.pdf SIGMOD 08 paper], which will help you to understand the queries.

==2.1 Header==
In header information part, we have several parameters:
||selectionStrategy|| specifies the selection strategy for the query, in SASE 1.0, you can choose "skip-till-next-match" or "partition-contiguity"||
||timeWindow || specifies the size of time window||
||partition attribute || optional, you can specify an attribute as the partition attribute||

==2.2 States==
Each query is represented by a nondeterministic finite automaton (NFA).  In the second part of the query file, we describe the states of the NFA. For each NFA state, we use one line to describe it. In each line, we have multiple parameters as following:

||State|| assigns a number to this state||
||type|| specifies the type of this state, "normal" or "kleeneClosure"||
||eventtype|| specifies the event type which satisfies this state||

We use an "&" symbol to connect the parameters.

After providing the basic information for this state,  we can describe the edge(s), and each edge can be separated by "|". An edge contains the edgetype and predicate(s).

||edgetype|| specifies the type of an edge, "begin" , "take" or "proceed"||
||predicate|| specifies the requirement for this state. If you want to use an equation, please use "==" instead of "=", e.g., "price == 10".||

==2.3 Example ==
{{{
SelectionStrategy = partition-contiguity | TimeWindow = 500 | partitionAttribute = symbol
State=1 & type = kleeneClosure & eventtype = stock | edgetype = begin  & price % 500 == 0 | edgetype = take | edgetype = proceed 
State=2 & type = normal & eventtype = stock | edgetype = begin & volume < 150
end
}}}


You can find more examples in SASE 1.0 package under the *examples* folder and the *tests* folder. All query files use the extension *.query*.